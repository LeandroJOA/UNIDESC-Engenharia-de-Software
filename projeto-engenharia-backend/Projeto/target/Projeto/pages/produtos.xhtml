<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>Produtos</title>
</h:head>
<h:body style="background-color:#252525;">
    <!--Mensagem flutuante-->
    <p:growl id="mensagem"/>

    <h:form id="formListagem">
        <p:panel header="Produtos - Listagem">
            <!--
            emptyMessage - Mensagem quando não há registros
            Paginator - Opções de troca de pagina
            value - Ligação entre a tela e o modelo
            var - Cursor para o desenho das linhas
            -->
            <p:dataTable id="tabela" emptyMessage="Nenhum registro encontrado"
                         paginator="true" value="#{produtoBean.produtos}" var="produto"
                         rows="5">
                <f:facet name="footer">
                    <!--
                    actionListener - Chamada do metodo para instanciar o objeto, antes da tela de
                    input ser gerada
                    oncomplete - Tornar visivel a janela flutuante, assim que o evento do botão é finalizado
                    update - Atuailizar a area do form "formCadastro" e do panelGrid "painel",
                    quando este botão é pressionado, para limpar os campos
                    -->
                    <p:commandButton value="Novo" actionListener="#{produtoBean.novo}"
                                     oncomplete="PF('dialogo').show();"
                                     update=":mensagem :formCadastro:painel">
                        <!--actionListener - Resetar estado dos inputs-->
                        <f:actionListener type="org.omnifaces.eventlistener.ResetInputAjaxActionListener"/>
                    </p:commandButton>
                </f:facet>

                <p:column headerText="Descrição" sortBy="#{produto.descricao}"
                          filterBy="#{produto.descricao}">
                    <!--outputText - Será impresso nesta coluna o registro "Descrição",
                    com ajudo do cursor "produto" -->
                    <h:outputText value="#{produto.descricao}"/>
                </p:column>

                <p:column headerText="Quantidade" sortBy="#{produto.quantidade}"
                          filterBy="#{produto.quantidade}">
                    <h:outputText value="#{produto.quantidade}"/>
                </p:column>

                <p:column headerText="Preço" sortBy="#{produto.preco}" filterBy="#{produto.preco}">
                    <h:outputText value="#{produto.preco}">
                        <f:convertNumber locale="pt_BR" minFractionDigits="2"/>
                    </h:outputText>
                </p:column>

                <p:column headerText="Fabricante" sortBy="#{produto.fabricante.descricao}"
                          filterBy="#{produto.fabricante.descricao}">
                    <h:outputText value="#{produto.fabricante.descricao}"/>
                </p:column>

                <p:column headerText="Opções">
                    <!-- Botão excluir -->
                    <p:commandButton icon="ui-icon-trash"
                                     actionListener="#{produtoBean.excluir}"
                                     update=":mensagem :formListagem:tabela">
                        <!-- Chamada da janela de confirmação -->
                        <p:confirm header="Confirmação"
                                   message="Deseja excluir este produto?" icon="ui-icon-alert"/>
                        <!--Passagem de atributo de qual linha deve ser excluida-->
                        <f:attribute name="produtoSelecionado" value="#{produto}"/>
                    </p:commandButton>

                    <!-- Botão editar -->
                    <p:commandButton icon="ui-icon-pencil"
                                     actionListener="#{produtoBean.editar}"
                                     update=":mensagem :formCadastro:painel"
                                     oncomplete="PF('dialogo').show();">
                        <f:attribute name="produtoSelecionado" value="#{produto}"/>
                        <!-- Resete do estado de validação -->
                        <f:actionListener type="org.omnifaces.eventlistener.ResetInputAjaxActionListener"/>
                    </p:commandButton>
                </p:column>
            </p:dataTable>

            <!-- Janela de confirmação -->
            <p:confirmDialog global="true">
                <p:commandButton value="Sim" type="button"
                                 styleClass="ui-confirmdialog-yes" icon="ui-icon-check"/>
                <p:commandButton value="Não" type="button"
                                 styleClass="ui-confirmdialog-no" icon="ui-icon-close"/>
            </p:confirmDialog>
        </p:panel>
    </h:form>

    <!--Janela flutuante-->
    <p:dialog header="Produtos - Cadastro" widgetVar="dialogo"
              draggable="true" resizable="false" modal="true">
        <!--enctype - Utilizado para realizar Upload-->
        <h:form id="formCadastro" enctype="multipart/form-data">
            <!--
            value - Ligação entre este input e o controle, armazenando o que é digitado
            converter - Convertor generico do OmniFaces para chave estrangeira
            required - Determina campo como obrigatorio
            requiredMessage - Mensagem de erro quando campo estiver vazio
            -->
            <h:panelGrid id="painel" columns="2">
                <p:outputLabel for="descricao" value="Descrição:"/>
                <p:inputText id="descricao" maxlength="50" size="30"
                             value="#{produtoBean.produto.descricao}" required="true"
                             requiredMessage="O campo 'Descrição' é obrigatório"/>

                <p:outputLabel for="quantidade" value="Quantidade:"/>
                <p:inputText id="quantidade" maxlength="5" size="10"
                             value="#{produtoBean.produto.quantidade}" required="true"
                             requiredMessage="O campo 'Quantidade' é obrigatório"
                             converterMessage="Informe um valor válido para o campo 'Quantidade'"
                             validatorMessage="Informe um valor entre 0 e 1000 para o campo 'Quantidade'">
                    <f:validateLongRange minimum="0" maximum="1000"/>
                </p:inputText>

                <p:outputLabel for="preco" value="Preço:"/>
                <p:inputText id="preco" maxlength="7" size="10"
                             value="#{produtoBean.produto.preco}" required="true"
                             requiredMessage="O campo 'Preço' é obrigatório"
                             converterMessage="Informe um valor válido para o campo 'Preço'"
                             validatorMessage="Informe um valor entre 0,01 e 9999,99 para o campo 'Preço'">
                    <f:validateDoubleRange minimum="0.01" maximum="9999.99"/>
                    <f:convertNumber locale="pt_BR" minFractionDigits="2"/>
                </p:inputText>

                <p:outputLabel for="fabricante" value="Fabricante:"/>
                <p:selectOneMenu id="fabricante" filter="true"
                                 value="#{produtoBean.produto.fabricante}"
                                 converter="omnifaces.SelectItemsConverter" required="true"
                                 requiredMessage="O campo 'Fabricante' é obrigatório">
                    <f:selectItem noSelectionOption="true" itemLabel="Seleciona um fabricante "/>
                    <f:selectItems value="#{produtoBean.fabricantes}" var="fabricante"
                                   itemValue="#{fabricante}" itemLabel="#{fabricante.descricao}"/>
                </p:selectOneMenu>

                <p:outputLabel for="upload" value="Upload:"/>
                <p:fileUpload id="upload" mode="advanced" fileUploadListener="#{produtoBean.upload}"
                              update=":mensagem :formCadastro:foto" auto="true"/>

                <p:outputLabel for="foto" value="Foto:"/>
                <!--Representação visual da imagem enviada, atraves do atributo "foto" de "ImagemBean"-->
                <p:graphicImage id="foto" value="#{imagemBean.foto}" width="200" height="200">
                    <!--Passa um atributo chamado "caminho", contendo o caminho da imagem armazenada
                     em "ProdutoBean", como parametro para "ImagemBean" assim que o chama-->
                    <f:param name="caminho" value="#{produtoBean.produto.caminho}"/>
                </p:graphicImage>
            </h:panelGrid>

            <h:panelGrid columns="4">
                <!-- actionListener - Ligação entre este botão e o metodo de salvar
                update - Redesenhar a tela, adicionando a mensagem flutuante, limpando os campos e atualizando a listagem-->
                <p:commandButton value="Salvar"
                                 actionListener="#{produtoBean.salvar}"
                                 update=":mensagem :formCadastro:painel :formListagem:tabela"/>
                <!-- oncomplete - Esconder a janela flutuante, assim que o ação do botão é completada -->
                <p:commandButton value="Cancelar" oncomplete="PF('dialogo').hide();"/>
            </h:panelGrid>
        </h:form>
    </p:dialog>
</h:body>
</html>